# Generated by Django 3.2 on 2023-01-22 14:42

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(allow_unicode=True, max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Post9',
            fields=[
                ('post_code9', models.AutoField(primary_key=True, serialize=False)),
                ('date9', models.DateField()),
                ('name9', models.CharField(max_length=100)),
                ('letter9', models.TextField()),
                ('image9', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('tags9', models.ManyToManyField(blank=True, to='shop.Tag')),
            ],
        ),
        migrations.CreateModel(
            name='Post8',
            fields=[
                ('post_code8', models.AutoField(primary_key=True, serialize=False)),
                ('date8', models.DateField()),
                ('name8', models.CharField(max_length=100)),
                ('letter8', models.TextField()),
                ('image8', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('tags8', models.ManyToManyField(blank=True, to='shop.Tag')),
            ],
        ),
        migrations.CreateModel(
            name='Post7',
            fields=[
                ('post_code7', models.AutoField(primary_key=True, serialize=False)),
                ('date7', models.DateField()),
                ('name7', models.CharField(max_length=100)),
                ('letter7', models.TextField()),
                ('image7', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('tags7', models.ManyToManyField(blank=True, to='shop.Tag')),
            ],
        ),
        migrations.CreateModel(
            name='Post6',
            fields=[
                ('post_code6', models.AutoField(primary_key=True, serialize=False)),
                ('date6', models.DateField()),
                ('name6', models.CharField(max_length=100)),
                ('letter6', models.TextField()),
                ('image6', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('tags6', models.ManyToManyField(blank=True, to='shop.Tag')),
            ],
        ),
        migrations.CreateModel(
            name='Post5',
            fields=[
                ('post_code5', models.AutoField(primary_key=True, serialize=False)),
                ('date5', models.DateField()),
                ('name5', models.CharField(max_length=100)),
                ('letter5', models.TextField()),
                ('image5', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('tags5', models.ManyToManyField(blank=True, to='shop.Tag')),
            ],
        ),
        migrations.CreateModel(
            name='Post4',
            fields=[
                ('post_code4', models.AutoField(primary_key=True, serialize=False)),
                ('date4', models.DateField()),
                ('name4', models.CharField(max_length=100)),
                ('letter4', models.TextField()),
                ('image4', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('tags4', models.ManyToManyField(blank=True, to='shop.Tag')),
            ],
        ),
        migrations.CreateModel(
            name='Post3',
            fields=[
                ('post_code3', models.AutoField(primary_key=True, serialize=False)),
                ('date3', models.DateField()),
                ('name3', models.CharField(max_length=100)),
                ('letter3', models.TextField()),
                ('image3', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('tags3', models.ManyToManyField(blank=True, to='shop.Tag')),
            ],
        ),
        migrations.CreateModel(
            name='Post2',
            fields=[
                ('post_code2', models.AutoField(primary_key=True, serialize=False)),
                ('date2', models.DateField()),
                ('name2', models.CharField(max_length=100)),
                ('letter2', models.TextField()),
                ('image2', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('tags2', models.ManyToManyField(blank=True, to='shop.Tag')),
            ],
        ),
        migrations.CreateModel(
            name='Post12',
            fields=[
                ('post_code12', models.AutoField(primary_key=True, serialize=False)),
                ('date12', models.DateField()),
                ('name12', models.CharField(max_length=100)),
                ('letter12', models.TextField()),
                ('image12', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('tags12', models.ManyToManyField(blank=True, to='shop.Tag')),
            ],
        ),
        migrations.CreateModel(
            name='Post11',
            fields=[
                ('post_code11', models.AutoField(primary_key=True, serialize=False)),
                ('date11', models.DateField()),
                ('name11', models.CharField(max_length=100)),
                ('letter11', models.TextField()),
                ('image11', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('tags11', models.ManyToManyField(blank=True, to='shop.Tag')),
            ],
        ),
        migrations.CreateModel(
            name='Post10',
            fields=[
                ('post_code10', models.AutoField(primary_key=True, serialize=False)),
                ('date10', models.DateField()),
                ('name10', models.CharField(max_length=100)),
                ('letter10', models.TextField()),
                ('image10', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('tags10', models.ManyToManyField(blank=True, to='shop.Tag')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('post_code', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(null=True)),
                ('name', models.CharField(max_length=100)),
                ('letter', models.TextField()),
                ('image', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('tags', models.ManyToManyField(blank=True, to='shop.Tag')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
